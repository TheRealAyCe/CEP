class CEndScreen inherit CStateUIWnd

	const int EST_CAMPAIGN_LOSE		=0;
	const int EST_CAMPAIGN_WIN		=1;
	const int EST_SKIRMISH_LOSE		=2;
	const int EST_SKIRMISH_WIN		=3;
	const int EST_MULTIPLAYER_LOSE	=4;
	const int EST_MULTIPLAYER_WIN	=5;
	const int EST_INVALID			=6;

	var ^CDesktop					m_pxDesktop;
	var ^CMenuButton				m_pxBtnRetryContinue;
	var ^CMenuButton				m_pxBtnLoadGame;
	var ^CMenuButton				m_pxBtnViewStats;
	var ^CMenuButton				m_pxBtnBack2Menu;
	var ^CMenuButton				m_pxBtnQuit2Win;
	var ^CMenuButton				m_pxBtnSaveReplay;

	var ^CStaticCtrlEx				m_pxPic;

	var ^CStaticCtrl				m_pxWinLoseText;
	var ^CStaticCtrlEx				m_pxReason;

	var int 						m_iEndScreenType;
	var	int							m_iStatisticsTimer;

	//var string 			 		m_sReason;
	//var int						m_iShutDelay;
	//var int						m_iContinueState;
	
	var string 						m_sPath; //store init path for menu changes during endgame screen


	export constructor(string p_sPath)	
		m_sPath = p_sPath;
		if(!InitFromResource("UI/EndScreen","EndScreen")) then
			return;
		endif;

		m_pxDesktop=CClientWrap.GetDesktop();
		SetPos(m_pxDesktop^.GetWidth()/2 - GetWidth()/2,m_pxDesktop^.GetHeight()/2 - GetHeight()/2);

		m_pxBtnRetryContinue=cast<CMenuButton>(GetControl("RetryContinue"));
		m_pxBtnLoadGame=cast<CMenuButton>(GetControl("LoadGame"));
		m_pxBtnViewStats=cast<CMenuButton>(GetControl("ViewStats"));
		m_pxBtnBack2Menu=cast<CMenuButton>(GetControl("Back2Menu"));
		m_pxBtnQuit2Win=cast<CMenuButton>(GetControl("Quit2Win"));
		m_pxBtnSaveReplay=cast<CMenuButton>(GetControl("SaveReplay"));
		m_pxPic=cast<CStaticCtrlEx>(GetControl("Pic"));

		m_pxBtnRetryContinue^.m_xOnClick=OnRetryContinue;
		m_pxBtnLoadGame^.m_xOnClick=OnLoadGame;
		m_pxBtnViewStats^.m_xOnClick=OnViewStats;
		m_pxBtnBack2Menu^.m_xOnClick=OnBack2Menu;
		m_pxBtnQuit2Win^.m_xOnClick=OnQuit2Win;
		m_pxBtnSaveReplay^.m_xOnClick=OnSaveReplay;
		
		m_pxBtnRetryContinue^.SetText(CLocalizer.Get().Translate("_EndScreen_Retry"));
		m_pxBtnLoadGame^.SetText(CLocalizer.Get().Translate("_EndScreen_LoadGame"));
		m_pxBtnViewStats^.SetText(CLocalizer.Get().Translate("_EndScreen_ViewStatistics"));
		m_pxBtnBack2Menu^.SetText(CLocalizer.Get().Translate("_EndScreen_BackToMenu"));
		m_pxBtnQuit2Win^.SetText(CLocalizer.Get().Translate("_EndScreen_QuitToWindows"));
		m_pxBtnSaveReplay^.SetText(CLocalizer.Get().Translate("_EndScreen_SaveReplay"));

		var CConfig xConf;
		var ^CLevelInfo pxLevelInfo=^(CGameWrap.GetClient().GetLevelInfo());
		m_pxBtnSaveReplay^.SetDisabled(true);
		m_pxBtnRetryContinue^.SetVisible(false);
		if(pxLevelInfo!=null && CClientWrap.HasServer() && CGameWrap.GetClientID()==0)then
			if(xConf.GetB("Pest/Global/RecordReplay",false))then
				m_pxBtnSaveReplay^.SetDisabled(false);
			endif;
			if(pxLevelInfo^.GetNumHumanPlayers()<2)then
				m_pxBtnRetryContinue^.SetVisible(true);
			endif;
		endif;

		var string sPic="menue/decoration/gameover_defeat.tga";

		m_iEndScreenType=CEndScreen.EST_INVALID;
		var string sReason = "";
		var array string asTokens;
		p_sPath.Split(asTokens,"\t",true);
		// Fix by AyCe: Moved this up
		// ---------------------------
		if(asTokens.NumEntries()>=4)then
			sReason=asTokens[3];
		endif;
		// ---------------------------

		// Fix by AyCe: Added command, Fix #2: Added Accomplished fix, Fix #3 checked entries
		CMusicMgr.Get().OnGameEnd((asTokens.NumEntries()>=3 && asTokens[2]=="Win")||sReason=="_GAOV_Accomplished");

		//System.Assert(asTokens.NumEntries()>=3,"asTokens.NumEntries()>=3, p_sPath: '"+p_sPath+"'");
		if(asTokens.NumEntries()>=3)then
			//System.Assert(asTokens[0]=="GameOver","asTokens[0]=='GameOver', p_sPath: '"+p_sPath+"'");
			var string sLevelType=asTokens[1];
			var string sState=asTokens[2];
			if(sLevelType=="Campaign")then
				// Fix by AyCe: Make campaign replaysaveable ^^
				//Henry: only special custom maps, because missi replay works not
				if(!CCEPMgr.Get().IsSpecialGAOVMap(pxLevelInfo))then
					m_pxBtnSaveReplay^.SetVisible(false);
				endif;
				if(sState=="Win")then
					m_iEndScreenType=EST_CAMPAIGN_WIN;
					sPic="menue/decoration/gameover_victory.tga";
					if(!CCampaignMgr.Get().OnLevelWin())then
						m_pxBtnRetryContinue^.SetDisabled(true);
					endif;
				// Fix by AyCe
				elseif(sState=="Lose"&&sReason=="_GAOV_Accomplished")then
					//m_pxBtnSaveReplay^.SetVisible(true);
					m_iEndScreenType=EST_SKIRMISH_WIN;
					sPic="menue/decoration/gameover_victory.tga";
				// Fix end
				elseif(sState=="Lose")then
					m_iEndScreenType=EST_CAMPAIGN_LOSE;
				endif;
			elseif(sLevelType=="Skirmish")then
				if(sState=="Win")then
					m_iEndScreenType=EST_SKIRMISH_WIN;
					sPic="menue/decoration/gameover_victory.tga";
				else//sState=="Lose"
					//System.Assert(sState=="Lose","sState=='Lose', p_sPath: '"+p_sPath+"'");
					m_iEndScreenType=EST_SKIRMISH_LOSE;
				endif;
			else//sLevelType=="Multiplayer"
				//System.Assert(sLevelType=="Multiplayer","sLevelType=='Multiplayer', p_sPath: '"+p_sPath+"'");
				if(sState=="Win")then
					m_iEndScreenType=EST_MULTIPLAYER_WIN;
					sPic="menue/decoration/gameover_victory.tga";
				else//sState=="Lose"
					//System.Assert(sState=="Lose","sState=='Lose', p_sPath: '"+p_sPath+"'");
					m_iEndScreenType=EST_MULTIPLAYER_LOSE;
				endif;
			endif;
		endif;
		m_pxPic^.SetBitmap(sPic);
		m_pxReason=cast<CStaticCtrlEx>(GetControl("Pic/Reason"));
		m_pxReason^.SetText(CLocalizer.Get().Translate(sReason));
		// Fix by AyCe
		//if(sReason==CLocalizer.Get().Translate(sReason))then
		//	sReason=CLocalizationMgr.Get().Translate(sReason);
		//endif;
		// Fix end

		m_pxWinLoseText=cast<CStaticCtrl>(GetControl("Pic/WinLoseText"));

		//m_sReason="MultiplayerLost"; // so its at least a valid value.

		if(m_iEndScreenType==EST_CAMPAIGN_LOSE)then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Campaign"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouLose"));
			m_pxWinLoseText^.SetTextColor({{255,0,0,255}});
		elseif(m_iEndScreenType==EST_CAMPAIGN_WIN)then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Campaign"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouWin"));
			m_pxWinLoseText^.SetTextColor({{0,255,0,255}});
			m_pxBtnRetryContinue^.SetText(CLocalizer.Get().Translate("_EndScreen_Continue"));
		elseif(m_iEndScreenType==EST_SKIRMISH_LOSE) then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Skirmish"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouLose"));
			m_pxWinLoseText^.SetTextColor({{255,0,0,255}});
			//m_pxBtnRetryContinue^.SetVisible(true);
		elseif(m_iEndScreenType==EST_SKIRMISH_WIN)then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Skirmish"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouWin"));
			m_pxWinLoseText^.SetTextColor({{0,255,0,255}});
			//m_pxBtnRetryContinue^.SetVisible(false);
		elseif(m_iEndScreenType==EST_MULTIPLAYER_LOSE) then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Multiplayer"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouLose"));
			m_pxWinLoseText^.SetTextColor({{255,0,0,255}});
			//m_pxBtnRetryContinue^.SetVisible(false);
			m_pxBtnLoadGame^.SetVisible(false);
		elseif(m_iEndScreenType==EST_MULTIPLAYER_WIN)then
			SetCaption(CLocalizer.Get().Translate("_EndScreen_Multiplayer"));
			m_pxWinLoseText^.SetText(CLocalizer.Get().Translate("_EndScreen_YouWin"));
			m_pxWinLoseText^.SetTextColor({{0,255,0,255}});
			//m_pxBtnRetryContinue^.SetVisible(false);
			m_pxBtnLoadGame^.SetVisible(false);
		else//(m_iEndScreenType==EST_INVALID)
			SetCaption("");
			//m_pxBtnRetryContinue^.SetVisible(false);
			//m_pxBtnLoadGame^.SetVisible(false);
			//m_pxBtnViewStats^.SetVisible(false);
		endif;

		//noch nicht implementierte buttons		
		m_pxBtnViewStats^.SetDisabled( true );

		m_iStatisticsTimer = SetTimer( 250, true );

		CGameWrap.GetStatisticMgr().RequestStatistics();
		CGameWrap.Pause();
	endconstructor;

	export destructor()
		//CWindowMgr.Get().ReleaseModal(this);
//L		KLog.LogSpam("MaSc","destructor EndScreen");
		CGameWrap.Unpause();
	enddestructor;
	
	export proc string GetPath()
		return m_sPath;
	endproc;

	proc bool OnRetryContinue()
		if(m_iEndScreenType==EST_CAMPAIGN_WIN)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_CONTINUECAMPAIGN);
			return true;
		endif;
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_RELOADGAME);
		return true;
		/*
		if(m_iEndScreenType==EST_CAMPAIGN_LOSE)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_RELOADGAME);
		elseif(m_iEndScreenType==EST_CAMPAIGN_WIN)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_CONTINUECAMPAIGN);
		else//if(m_iEndScreenType==EST_MULTIPLAYER_LOSE || m_iEndScreenType==EST_MULTIPLAYER_WIN)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_RELOADGAME);
		endif;
		return true;
		*/
	endproc;

	proc bool OnLoadGame()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_LOADGAMEMENU);
		return true;
	endproc;

	proc bool OnViewStats()
		var ^CStatisticScreen pxSS=new CStatisticScreen(this);
		var ^CDesktop pxDesktop = CClientWrap.GetDesktop();
		pxDesktop^.AddChild(pxSS);
		CWindowMgr.Get().BringWindowToTop(pxSS,true);
		CWindowMgr.Get().SetModal(pxSS);
		SetVisible(false);
		return true;
	endproc;

	export proc void OnCloseStats()
		SetVisible(true);
	endproc;

	proc bool OnBack2Menu()
		/*
		if(m_iEndScreenType==EST_CAMPAIGN_LOSE)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_RELOADGAME);
			return true;
		elseif(m_iEndScreenType==EST_CAMPAIGN_WIN)then
			CUIStateMgr.Get().SetState(CUIStateMgr.STATE_LOADCAMPAIGNLEVEL);
			return true;
		endif;*/
		CSoundMgrCln.SetGameIsRunning(false);
		CEvt_CloseGame.Send();
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MAINMENU);
		return true;
	endproc;

	proc bool OnQuit2Win()
		CGameWrap.Quit();
		return true;
	endproc;
	
	proc bool OnSaveReplay()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_SAVEGAMEMENU,m_sPath);
		return true;
	endproc;

	proc bool OnTimer( int p_iID )
		if ( p_iID == m_iStatisticsTimer ) then
			if ( CGameWrap.GetStatisticMgr().HasData() ) then
				m_pxBtnViewStats^.SetDisabled( false );
			endif;
		endif;
		return( true );
	endproc;

endclass;

